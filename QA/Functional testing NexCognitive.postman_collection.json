{
	"info": {
		"_postman_id": "5ede9478-9423-414a-a869-617f55d11a80",
		"name": "Functional testing NexCognitive",
		"description": "üîç Esta carpeta contiene las pruebas funcionales realizadas en Postman para validar los principales m√≥dulos de la API de NexCognitive. Se han configurado y ejecutado pruebas sobre los siguientes aspectos:\n\n‚úÖ **Gesti√≥n de Pacientes** ‚Äì Creaci√≥n, edici√≥n, visualizaci√≥n y desactivaci√≥n de pacientes.  \n‚úÖ **Dashboard** ‚Äì Obtenci√≥n de estad√≠sticas y consulta de las √∫ltimas sesiones de juego.  \n‚úÖ **Game Sessions** ‚Äì Creaci√≥n, inicio, cancelaci√≥n y consulta de sesiones de juego.  \n‚úÖ **Board Games** ‚Äì Recuperaci√≥n de la lista de juegos y filtros disponibles.  \n‚úÖ **Login Controller** ‚Äì Validaci√≥n del proceso de autenticaci√≥n.\n\nCada prueba ha sido dise√±ada para evaluar tanto casos positivos como negativos, garantizando la correcta respuesta de la API ante diferentes escenarios. Se han verificado los c√≥digos de respuesta, estructura de los datos y seguridad en el acceso a los endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42791288"
	},
	"item": [
		{
			"name": "Login-controller",
			"item": [
				{
					"name": "Iniciar Sesi√≥n para Obtener el Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extraer el token de la respuesta y guardarlo en una variable de entorno\r",
									"let response = pm.response.json();\r",
									"if (response.token) {\r",
									"    pm.environment.set(\"authToken\", response.token);\r",
									"}\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response body has the required fields and data types\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.JWTToken).to.be.a('string');\r",
									"    pm.expect(responseData.JWTToken).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has the required fields and data types\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.JWTToken).to.be.a('string');\r",
									"    pm.expect(responseData.JWTToken).to.exist.and.to.not.be.empty;\r",
									"\r",
									"    // Guardar el token en una variable de entorno\r",
									"    pm.environment.set(\"authToken\", responseData.JWTToken);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"juan.perez@example.com\",\r\n  \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}login",
							"host": [
								"{{base_url}}login"
							]
						}
					},
					"response": []
				}
			],
			"description": "Se prueban los endpoints de autenticaci√≥n, validando el acceso con credenciales correctas e incorrectas, el manejo de errores y la seguridad en el inicio de sesi√≥n."
		},
		{
			"name": "Patient management",
			"item": [
				{
					"name": "Crear Paciente",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"dni\": 90071992547408,\r\n  \"name\": \"Luisa Perez\",\r\n  \"age\": 34,\r\n  \"email\": \"luisa.perez@example.com\",\r\n  \"diagnosis\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}patients",
							"host": [
								"{{base_url}}patients"
							]
						}
					},
					"response": []
				},
				{
					"name": " Obtener Lista de Pacientes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}patients",
							"host": [
								"{{base_url}}patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener Paciente por ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}patients/25fe85ad-e917-4914-ab4a-76c7842a5de3",
							"host": [
								"{{base_url}}patients"
							],
							"path": [
								"25fe85ad-e917-4914-ab4a-76c7842a5de3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar Paciente",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Luisa Perez\",\r\n  \"age\": 36,\r\n  \"email\": \"luisa.erezbx@example.com\",\r\n  \"diagnosis\": \"string\",\r\n  \"dni\": \"90071992547409\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}patients/25fe85ad-e917-4914-ab4a-76c7842a5de3",
							"host": [
								"{{base_url}}patients"
							],
							"path": [
								"25fe85ad-e917-4914-ab4a-76c7842a5de3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar Paciente ",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}patients/25fe85ad-e917-4914-ab4a-76c7842a5de3",
							"host": [
								"{{base_url}}patients"
							],
							"path": [
								"25fe85ad-e917-4914-ab4a-76c7842a5de3"
							]
						}
					},
					"response": []
				}
			],
			"description": "Este m√≥dulo permite a los profesionales registrar, editar, visualizar y desactivar pacientes. Se incluyen pruebas para validar la integridad de los datos, restricciones de acceso y respuestas de la API."
		},
		{
			"name": "Game Sessions",
			"item": [
				{
					"name": "Crear una nueva sesi√≥n de juego",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>ID</th>\r",
									"        <th>Patient Name</th>\r",
									"        <th>Game Name</th>\r",
									"        <th>Estimated Attempts</th>\r",
									"        <th>Game Chips</th>\r",
									"        <th>Estimated Time</th>\r",
									"        <th>Status</th>\r",
									"        <th>Attempts Made</th>\r",
									"        <th>Time Played</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response.id}}</td>\r",
									"        <td>{{response.patientName}}</td>\r",
									"        <td>{{response.gameName}}</td>\r",
									"        <td>{{response.estimatedAttempts}}</td>\r",
									"        <td>{{response.gameChips}}</td>\r",
									"        <td>{{response.estimatedTime}}</td>\r",
									"        <td>{{response.status}}</td>\r",
									"        <td>{{response.attemptsMade}}</td>\r",
									"        <td>{{response.timePlayed}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return { response: pm.response.json() }\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"patientId\": \"cdf65e86-87c6-432b-a6e4-ca98296f0c6d\",\r\n  \"gameId\": \"6e09c7a5-881c-4e78-a6b7-3782bdc91899\",\r\n  \"estimated_attempts\": 1073741824,\r\n  \"game_chips\": 10,\r\n  \"estimated_time\": 1073741824\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}game-sessions/create",
							"host": [
								"{{base_url}}game-sessions"
							],
							"path": [
								"create"
							]
						},
						"description": "Delete the `toAccount` account to clean up after this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:id",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "15"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:18:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFound\",\n    \"message\": \"Account does not exist.\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:21:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "95"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidAuth\",\n    \"message\": \"Please provide a valid API key in the header of the request.\"\n}"
						}
					]
				},
				{
					"name": "Reenviar correo de sesi√≥n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"patientId\": \"4a731aa5-8ca9-4f3b-8eba-4db47425dcd3\",\r\n  \"gameId\": \"6e09c7a5-881c-4e78-a6b7-3782bdc91899\",\r\n  \"estimated_attempts\": 1073741824,\r\n  \"game_chips\": 10,\r\n  \"estimated_time\": 1073741824\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}game-sessions/create",
							"host": [
								"{{base_url}}game-sessions"
							],
							"path": [
								"create"
							]
						},
						"description": "Delete the `toAccount` account to clean up after this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:id",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "15"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:18:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFound\",\n    \"message\": \"Account does not exist.\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:21:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "95"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidAuth\",\n    \"message\": \"Please provide a valid API key in the header of the request.\"\n}"
						}
					]
				},
				{
					"name": "Iniciar una sesi√≥n de juego",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up variables",
									"pm.collectionVariables.unset(\"toAccountId\")",
									"pm.collectionVariables.unset(\"fromAccountId\")",
									"pm.collectionVariables.unset(\"transactionAmount\")",
									"pm.collectionVariables.unset(\"transactionCurrency\")",
									"pm.collectionVariables.unset(\"transactionId\")",
									"pm.collectionVariables.unset(\"toAccountStartingBalance\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}game-sessions/patient/join/447fc954-e4b5-414e-8ed5-836e581db696/start",
							"host": [
								"{{base_url}}game-sessions"
							],
							"path": [
								"patient",
								"join",
								"447fc954-e4b5-414e-8ed5-836e581db696",
								"start"
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:id",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "15"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:18:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFound\",\n    \"message\": \"Account does not exist.\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:21:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "95"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidAuth\",\n    \"message\": \"Please provide a valid API key in the header of the request.\"\n}"
						}
					]
				},
				{
					"name": "Enviar resultados de la partida",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"patientId\": \"4a731aa5-8ca9-4f3b-8eba-4db47425dcd3\",\r\n  \"gameId\": \"6e09c7a5-881c-4e78-a6b7-3782bdc91899\",\r\n  \"estimated_attempts\": 1073741824,\r\n  \"game_chips\": 10,\r\n  \"estimated_time\": 1073741824\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}game-sessions/create",
							"host": [
								"{{base_url}}game-sessions"
							],
							"path": [
								"create"
							]
						},
						"description": "Delete the `toAccount` account to clean up after this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:id",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "15"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:18:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFound\",\n    \"message\": \"Account does not exist.\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:21:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "95"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidAuth\",\n    \"message\": \"Please provide a valid API key in the header of the request.\"\n}"
						}
					]
				},
				{
					"name": "Cancelar sesi√≥n de juego",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up variables",
									"pm.collectionVariables.unset(\"toAccountId\")",
									"pm.collectionVariables.unset(\"fromAccountId\")",
									"pm.collectionVariables.unset(\"transactionAmount\")",
									"pm.collectionVariables.unset(\"transactionCurrency\")",
									"pm.collectionVariables.unset(\"transactionId\")",
									"pm.collectionVariables.unset(\"toAccountStartingBalance\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}game-sessions/patient/join/447fc954-e4b5-414e-8ed5-836e581db696/start",
							"host": [
								"{{base_url}}game-sessions"
							],
							"path": [
								"patient",
								"join",
								"447fc954-e4b5-414e-8ed5-836e581db696",
								"start"
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:id",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "15"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:18:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFound\",\n    \"message\": \"Account does not exist.\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:21:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "95"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidAuth\",\n    \"message\": \"Please provide a valid API key in the header of the request.\"\n}"
						}
					]
				},
				{
					"name": "Obtener una sesi√≥n de juego por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up variables",
									"pm.collectionVariables.unset(\"toAccountId\")",
									"pm.collectionVariables.unset(\"fromAccountId\")",
									"pm.collectionVariables.unset(\"transactionAmount\")",
									"pm.collectionVariables.unset(\"transactionCurrency\")",
									"pm.collectionVariables.unset(\"transactionId\")",
									"pm.collectionVariables.unset(\"toAccountStartingBalance\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "category",
								"value": "",
								"type": "text"
							},
							{
								"key": "type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}game-sessions/patient/join/44cc58ad-4343-47fa-8b50-35443117ddb9",
							"host": [
								"{{base_url}}game-sessions"
							],
							"path": [
								"patient",
								"join",
								"44cc58ad-4343-47fa-8b50-35443117ddb9"
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:id",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "15"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:18:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFound\",\n    \"message\": \"Account does not exist.\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "22"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 17 Feb 2024 13:21:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "95"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"invalidAuth\",\n    \"message\": \"Please provide a valid API key in the header of the request.\"\n}"
						}
					]
				}
			],
			"description": "Este conjunto de pruebas cubre la creaci√≥n, inicio, cancelaci√≥n y consulta de sesiones de juego. Se validan los flujos correctos y errores como intentos de duplicaci√≥n o acceso a sesiones ya finalizadas."
		},
		{
			"name": "Board Games",
			"item": [
				{
					"name": "Obtener lista de juegos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up variables",
									"pm.collectionVariables.unset(\"toAccountId\")",
									"pm.collectionVariables.unset(\"fromAccountId\")",
									"pm.collectionVariables.unset(\"transactionAmount\")",
									"pm.collectionVariables.unset(\"transactionCurrency\")",
									"pm.collectionVariables.unset(\"transactionId\")",
									"pm.collectionVariables.unset(\"toAccountStartingBalance\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "category",
								"value": "",
								"type": "text"
							},
							{
								"key": "type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}board-games",
							"host": [
								"{{base_url}}board-games"
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": []
				},
				{
					"name": "Obtener filtros de juegos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up variables",
									"pm.collectionVariables.unset(\"toAccountId\")",
									"pm.collectionVariables.unset(\"fromAccountId\")",
									"pm.collectionVariables.unset(\"transactionAmount\")",
									"pm.collectionVariables.unset(\"transactionCurrency\")",
									"pm.collectionVariables.unset(\"transactionId\")",
									"pm.collectionVariables.unset(\"toAccountStartingBalance\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}board-games/filters",
							"host": [
								"{{base_url}}board-games"
							],
							"path": [
								"filters"
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": []
				}
			],
			"description": "Se prueban los endpoints para obtener la lista de juegos y los filtros disponibles. Estas pruebas aseguran que los juegos se filtren correctamente y que la API responda de manera eficiente."
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "Ver estad√≠sticas totales",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up variables",
									"pm.collectionVariables.unset(\"toAccountId\")",
									"pm.collectionVariables.unset(\"fromAccountId\")",
									"pm.collectionVariables.unset(\"transactionAmount\")",
									"pm.collectionVariables.unset(\"transactionCurrency\")",
									"pm.collectionVariables.unset(\"transactionId\")",
									"pm.collectionVariables.unset(\"toAccountStartingBalance\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "category",
								"value": "",
								"type": "text"
							},
							{
								"key": "type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}board-games",
							"host": [
								"{{base_url}}board-games"
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": []
				},
				{
					"name": "√öltimas 10 sesiones del profesional autenticado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up variables",
									"pm.collectionVariables.unset(\"toAccountId\")",
									"pm.collectionVariables.unset(\"fromAccountId\")",
									"pm.collectionVariables.unset(\"transactionAmount\")",
									"pm.collectionVariables.unset(\"transactionCurrency\")",
									"pm.collectionVariables.unset(\"transactionId\")",
									"pm.collectionVariables.unset(\"toAccountStartingBalance\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}dashboard/latestgames",
							"host": [
								"{{base_url}}dashboard"
							],
							"path": [
								"latestgames"
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": []
				}
			],
			"description": "Se prueban los endpoints que proporcionan estad√≠sticas generales y la lista de las √∫ltimas sesiones de juego del usuario autenticado. Estas pruebas verifican que los datos sean correctos, seguros y eficientes en el tiempo de respuesta."
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://template.postman-echo.com",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "hRkgiBSD.alY86KwTdRXh2WHrgH1Gs"
		}
	]
}